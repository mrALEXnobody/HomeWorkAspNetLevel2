ДЗ 3.
Воспроизвести функционал, написанный на занятии.
1. Создать интерфейс и сервис для работы с сотрудниками
2. Обеспечить возможность создания новых сотрудников при помощи форм.
3. Обеспечить возможность редактирования, удаления и сохранения изменений для сотрудников 
в списке при помощи созданной формы.

*Создать аналогичный написанному на занятии сервису сотрудников InMemoryEmployeesService 
функционал с произвольным списком (который Вы придумали в первом ДЗ)
1. Использовать механизм внедрения зависимостей (Dependency Injection)
2. Реализовать добавление, редактирование, удаление элементов списка

ДЗ 4.
Воспроизвести функционал, написанный на занятии.
1. Реализовать валидацию модели EmployeeViewModel
2. Создать сервис для работы с продуктами.
3. Реализовать ViewComponent для категорий товаров.

* Реализовать ViewComponent для брендов
1. использовать механизм внедрения зависимостей (Dependency Injection)

ДЗ 5.
Воспроизвести функционал, написанный на занятии
1. Добавить EF в проект, настроить middleware, реализовать миграции.
2. Переработать все методы сервиса с учетом использования базы данных.
Дополнительное задание
1. Добавить в БД в таблицу товаров произвольное поле с помощью механизма миграций.

ДЗ 6.
1. Добавить Identity в проект, настроить.
2. Создать контроллер аутентификации с возможностью регистрации и авторизации.
3. *Разграничить возможность просмотра и редактирования сотрудников по ролям.

ДЗ 7.
1. Добавить Bundling and Minification.
2. Добавить роли в систему авторизации.
3. Создать сервис корзины и её функциональность.
Дополнительно
1. Реализовать страницу просмотра деталей о товаре (заменить хардкодный HTML на реальные товары с их полями)

Порядок действий (из вебинара):
- Доработаем интерфейс IProductService
-- Добавим метод GetProductById(int id)

- Доработаем соответственно реализации интерфейса
-- class SqlProductService : IProductService
-- InMemoryProductService : IProductService

- Доработаем контроллер CatalogController
-- Добавим поле BrandName в класс ProductViewModel
-- Реализуем метод ProductDetails(int id)

- Доработаем представления:
-- ProductDetails
--- Сделаем его строго типизированным
--- Подменим хардкодные строки на поля модели

-- Shared / Partial / _FeaturedItems
--- Убедимся, что представление строго типизированное
--- Добавим ссылку на детали продукта
--- Удалим (закомментируем) <div class="product-overlay">
